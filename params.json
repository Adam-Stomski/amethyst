{"name":"Amethyst","tagline":"Amethyst is a Rails inspired web-framework for Crystal language","body":"#![Amethyst-logo](http://s019.radikal.ru/i635/1506/28/bac4764b9e03.png)\r\n[![Build Status](https://travis-ci.org/Codcore/Amethyst.svg)](https://travis-ci.org/Codcore/Amethyst)  [![Join the chat at https://gitter.im/Codcore/Amethyst](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Codcore/Amethyst?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nAmethyst is a web framework written in [Crystal](https://github.com/manastech/crystal) language. The goals of Amethyst are to be fast like Node.js and provide agility in application development as Rails do. Why I called it \"Amethyst\"? Because Crystal  has a light purple color at GitHub like [amethyst gemstone](http://en.wikipedia.org/wiki/Amethyst).\r\n\r\nLatest version - [0.1.3](https://github.com/Codcore/Amethyst/releases/tag/v0.1.3)\r\n\r\n[Amethyst examples](https://github.com/Codcore/amethyst-examples)\r\n\r\nFor detailed information, see docs on our [wiki](https://github.com/Codcore/Amethyst/wiki) below:\r\n\r\n* [Installation](https://github.com/Codcore/Amethyst/wiki/Installation)\r\n* [Usage](https://github.com/Codcore/Amethyst/wiki/Usage)\r\n* [Controllers](https://github.com/Codcore/Amethyst/wiki/Controllers)\r\n* [Routing](https://github.com/Codcore/Amethyst/wiki/Routing)\r\n* [Middleware](https://github.com/Codcore/Amethyst/wiki/Middleware)\r\n* [Static files](https://github.com/Codcore/Amethyst/wiki/StaticFiles)\r\n* [Applications](https://github.com/Codcore/Amethyst/wiki/Applications)\r\n\r\n[Here are some benchmarking results](https://gist.github.com/Codcore/0c7a331b69eed542fb78)\r\n\r\nFor now, next things are implemented:\r\n* class-based controllers with method-based actions\r\n* views for actions (*.ecr) (with some magic behind the scene done for you)\r\n* middleware support\r\n* simple REST routing\r\n* default routes for controller\r\n* path, GET and POST params inside actions\r\n* basic cookies support\r\n* static files serving\r\n* http logger and timer for developers\r\n* simple environments support\r\n\r\n## Example\r\nHere is classic 'Hello World' in Amethyst\r\n```crystal\r\nrequire \"amethyst\"\r\n\r\nclass WorldController < Base::Controller\r\n  actions :hello\r\n\r\n  view \"hello\", \"#{__DIR__}/views\", name\r\n  def hello\r\n    name = \"World\"\r\n    respond_to do |format|\r\n      format.html { render \"hello\", name }\r\n    end\r\n  end\r\nend\r\n\r\nclass HelloWorldApp < Base::App\r\n  routes.draw do\r\n    all \"/\",      \"world#hello\" \r\n    get \"/hello\", \"world#hello\" \r\n    register WorldController\r\n  end\r\nend\r\n\r\napp = HelloWorldApp.new\r\napp.serve\r\n\r\n# /views/hello.ecr\r\nHello, <%= @name %>\r\n```\r\n\r\n\r\n## Development\r\n\r\nFeel free to fork project and make pull-requests. Stick to standart project structure and name conventions:\r\n\r\n    src/\r\n      amethyst/\r\n        module1/       # module1 files\r\n          class1.cr\r\n          ...\r\n          module1.cr   # loads all module1 files into namespace Amethyst::Module1\r\n        module2/\r\n          class1.cr    # describe class Class1 (module, struct, i.e)\r\n          ...\r\n          module2.cr   # loads all module2 files into namespace Amethyst::Module2\r\n        file_module.cr # module that consists of one file\r\n      amethyst.cr      # requires module1.cr, module2.cr, file_module.cr\r\n\r\n    spec/\r\n      module1/\r\n        class1_spec.cr # specs for Module1::Class\r\n        spec_helper.cr # loads main spec_helper\r\n      module2/\r\n        class2_spec.cr\r\n      spec_helper      # loads \"amethyst/all\"\r\n\r\n    examples/          # examples to play with\r\n                       # don't forget to require \"..src/amethyst\" or \"..src/all\"\r\n\r\n\r\n## Contributing\r\n\r\nI would be glad for any help with contributing.\r\n\r\n1. Fork it ( https://github.com/Codcore/amethyst/fork )\r\n2. Create your feature branch (git checkout -b my-new-feature)\r\n3. Commit your changes (git commit -am 'Add some feature')\r\n4. Push to the branch (git push origin my-new-feature)\r\n5. Create a new Pull Request\r\n\r\n\r\n## Contributors\r\n\r\n- [Andrew Yaroshuk](https://github.com/Codcore]) Codcore - creator, maintainer\r\n","google":"UA-64088406-1","note":"Don't delete this file! It's used internally to help with page regeneration."}